// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stocks.Infrastructure.Persistence.Data;

#nullable disable

namespace Stocks.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230509023425_addRelationship_OneToMany_Stocks_Exchanges")]
    partial class addRelationship_OneToMany_Stocks_Exchanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Stocks.Domain.Models.Exchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("exchange", (string)null);
                });

            modelBuilder.Entity("Stocks.Domain.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Exchange_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Exchange_Id");

                    b.ToTable("stock", (string)null);
                });

            modelBuilder.Entity("Stocks.Domain.Models.StockQuote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("DayHigh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DayLow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DayOpen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DayPercentChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastTradeTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MarketCap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousClosePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Stock_Id");

                    b.ToTable("stock_quote", (string)null);
                });

            modelBuilder.Entity("Stocks.Domain.Models.Stock", b =>
                {
                    b.HasOne("Stocks.Domain.Models.Exchange", "Exchange")
                        .WithMany("Stocks")
                        .HasForeignKey("Exchange_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exchange");
                });

            modelBuilder.Entity("Stocks.Domain.Models.StockQuote", b =>
                {
                    b.HasOne("Stocks.Domain.Models.Stock", "Stock")
                        .WithMany("StockQuotes")
                        .HasForeignKey("Stock_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Stocks.Domain.Models.Exchange", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Stocks.Domain.Models.Stock", b =>
                {
                    b.Navigation("StockQuotes");
                });
#pragma warning restore 612, 618
        }
    }
}
